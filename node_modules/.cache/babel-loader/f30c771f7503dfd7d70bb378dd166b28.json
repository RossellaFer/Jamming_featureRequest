{"ast":null,"code":"import _toConsumableArray from \"/Users/Rossella/Documents/GitHub/Jamming/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Rossella/Documents/GitHub/Jamming/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Rossella/Documents/GitHub/Jamming/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Rossella/Documents/GitHub/Jamming/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Rossella/Documents/GitHub/Jamming/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Rossella/Documents/GitHub/Jamming/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Rossella/Documents/GitHub/Jamming/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Rossella/Documents/GitHub/Jamming/src/Components/App/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      searchResults: [{\n        name: \"Track 1\",\n        artist: \"Artist 1\",\n        album: \"Album 1\",\n        id: 1\n      }, {\n        name: \"Track 2\",\n        artist: \"Artist 2\",\n        album: \"Album 2\",\n        id: 2\n      }, {\n        name: \"Track 3\",\n        artist: \"Artist 3\",\n        album: \"Album 3\",\n        id: 3\n      }],\n      playlistName: \"My playlist\",\n      playlistTracks: [{\n        name: \"Playlist Track 1\",\n        artist: \"Artist 1\",\n        album: \"Album 1\",\n        id: 4,\n        uri: \"spotify:track:0ynF2svLpsCqkfcWwG03eo\"\n      }, {\n        name: \"Playlist Track 2\",\n        artist: \"Artist 2\",\n        album: \"Album 2\",\n        id: 5,\n        uri: \"spotify:track:6HIM6FrIlHYCoPlKkDtgXn\"\n      }]\n    };\n    _this.addTrack = _this.addTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeTrack = _this.removeTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updatePlaylistName = _this.updatePlaylistName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.savePlaylist = _this.savePlaylist.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.search = _this.search.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"addTrack\",\n    value: function addTrack(track) {\n      if (this.state.playlistTracks.find(function (savedTrack) {\n        return savedTrack.id === track.id;\n      })) {\n        return;\n      } else {\n        //makes a copy of the playlist we have in the state and then assigns the value of playlistTracks to that playlist + the new track\n        var copy = this.state.playlistTracks;\n        this.setState({\n          playlistTracks: _toConsumableArray(copy).concat([track])\n        });\n      }\n    }\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack(track) {\n      this.setState({\n        playlistTracks: this.state.playlistTracks.filter(function (savedTrack) {\n          return savedTrack.id !== track.id;\n        })\n      });\n    } // Function that takes the value of the input box [in the playlist component]\n    //and sets the state of the playlist name to this value\n\n  }, {\n    key: \"updatePlaylistName\",\n    value: function updatePlaylistName(name) {\n      this.setState({\n        playlistName: name\n      });\n    }\n  }, {\n    key: \"savePlaylist\",\n    value: function savePlaylist() {\n      var trackURIs = [];\n      this.state.playlistTracks.forEach(function (track) {\n        return trackURIs.push(track.uri);\n      });\n      return trackURIs;\n    }\n  }, {\n    key: \"search\",\n    value: function search(term) {\n      console.log(term);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Ja\", React.createElement(\"span\", {\n        className: \"highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"mmm\"), \"ing\"), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App-playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(SearchResults, {\n        searchResults: this.state.searchResults,\n        onAdd: this.addTrack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Playlist, {\n        searchResults: this.state.searchResults,\n        playlistName: this.state.playlistName,\n        playlistTracks: this.state.playlistTracks,\n        onRemove: this.removeTrack,\n        onNameChange: this.updatePlaylistName,\n        onSave: this.savePlaylist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Rossella/Documents/GitHub/Jamming/src/Components/App/App.js"],"names":["React","Component","SearchBar","SearchResults","Playlist","App","props","state","searchResults","name","artist","album","id","playlistName","playlistTracks","uri","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","find","savedTrack","copy","setState","filter","trackURIs","forEach","push","term","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [\n        {\n          name: \"Track 1\",\n          artist: \"Artist 1\",\n          album: \"Album 1\",\n          id: 1\n        },\n        {\n          name: \"Track 2\",\n          artist: \"Artist 2\",\n          album: \"Album 2\",\n          id: 2,\n        },\n        {\n          name: \"Track 3\",\n          artist: \"Artist 3\",\n          album: \"Album 3\",\n          id: 3\n         }\n       ],\n       playlistName: \"My playlist\",\n       playlistTracks: [\n         {\n           name: \"Playlist Track 1\",\n           artist: \"Artist 1\",\n           album: \"Album 1\",\n           id: 4,\n           uri: \"spotify:track:0ynF2svLpsCqkfcWwG03eo\"\n         },\n         {\n           name: \"Playlist Track 2\",\n           artist: \"Artist 2\",\n           album: \"Album 2\",\n           id: 5,\n           uri: \"spotify:track:6HIM6FrIlHYCoPlKkDtgXn\"\n         }\n       ]\n  };\n  this.addTrack = this.addTrack.bind(this);\n  this.removeTrack = this.removeTrack.bind(this);\n  this.updatePlaylistName = this.updatePlaylistName.bind(this);\n  this.savePlaylist = this.savePlaylist.bind(this);\n  this.search = this.search.bind(this);\n}\n\n  addTrack(track){\n    if (this.state.playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n    return;\n  }\n  else {\n    //makes a copy of the playlist we have in the state and then assigns the value of playlistTracks to that playlist + the new track\n    let copy = this.state.playlistTracks;\n    this.setState({playlistTracks: [...copy, track]});\n  }\n  }\n\n  removeTrack(track) {\n    this.setState({\n      playlistTracks: this.state.playlistTracks.filter(savedTrack => savedTrack.id !== track.id)\n    });\n  }\n\n// Function that takes the value of the input box [in the playlist component]\n//and sets the state of the playlist name to this value\n  updatePlaylistName(name) {\n    this.setState({playlistName: name})\n  }\n\n  savePlaylist() {\n    const trackURIs = [];\n    this.state.playlistTracks.forEach(track => trackURIs.push(track.uri));\n    return trackURIs;\n  }\n\n  search(term) {\n    console.log(term);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n            <SearchBar />\n          <div className=\"App-playlist\">\n        {/*This displays the search results and allows the user to add to the playlist*/}\n            <SearchResults searchResults={this.state.searchResults}\n                           onAdd={this.addTrack}\n                           />\n                           {/*This displays the playlist tracks and allows the user to remove songs from the playlist*/}\n            <Playlist searchResults={this.state.searchResults}\n                      playlistName={this.state.playlistName}\n                      playlistTracks={this.state.playlistTracks}\n                      onRemove={this.removeTrack}\n                      onNameChange={this.updatePlaylistName}\n                      onSave={this.savePlaylist}\n                      />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}